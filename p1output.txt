Breakpoint 1, main () at p1original.c:18
18  {
(gdb) n
20    input(&x1,&x2,&y1,&y2);
(gdb) s
input (x1=0x7ffe7fbabd74, y1=0x7ffe7fbabd78, x2=0x7ffe7fbabd7c, 
    y2=0x7ffe7fbabd80) at p1original.c:5
5     printf("enter the values\n");
(gdb) n
enter the values
6     scanf("%f%f%f%f",x1,y1,x2,y2);
(gdb) n
1
1
2
2
7   }
(gdb) n
main () at p1original.c:21
21    find_distance(x1,x2,y1,y2,&area);
(gdb) s
find_distance (x1=1, y1=1, x2=2, y2=2, area=0x7ffe7fbabd84) at p1original.c:10
10    *area=sqrtf((x2-x1)*(x2-x1)+ (y2-y1)*(y2-y1));
(gdb) n
12  }
(gdb) n
main () at p1original.c:22
22    output(x1,x2,y1,y2,area);
(gdb) s
output (x1=1, y1=1, x2=2, y2=2, area=1.41421354) at p1original.c:15
15    printf("the distance between two points is %f\n",area);
(gdb) n
the distance between two points is 1.414214
16  }
(gdb) n
main () at p1original.c:23
23    return 0;
(gdb) p x1
$1 = 1
(gdb) p x2
$2 = 1
(gdb) p y1
$3 = 2
(gdb) p y2
$4 = 2
(gdb) p area
$5 = 1.41421354
(gdb) l
18  {
19    float x1,x2,y1,y2,area;
20    input(&x1,&x2,&y1,&y2);
21    find_distance(x1,x2,y1,y2,&area);
22    output(x1,x2,y1,y2,area);
23    return 0;
24  }(gdb) 
